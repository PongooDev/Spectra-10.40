#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: ScreenCapture

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class ScreenCapture.ScreenCaptureContext
// 0x00A8 (0x00D0 - 0x0028)
class UScreenCaptureContext final : public UObject
{
public:
	TMulticastInlineDelegate<void(bool bSuccess, const class FString& LocalFilePath, const struct FIntPoint& VideoResolution, class UTexture2D* PreviewImage)> OnCaptureFinishedDelegate; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCaptureInterruptedDelegate;                      // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bSuccess, const class FString& LocalFilePath)> OnVideoSavedToAlbumDelegate; // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnScreenshotCapturedDelegate;                      // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x58];                                      // 0x0068(0x0058)(Fixing Size After Last Property [ Dumper-8 ])
	class UTexture2D*                             PreviewImage;                                      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-8 ])

public:
	static class UScreenCaptureContext* CreateScreenCaptureContext(class UObject* WorldContextObject);

	bool RemoveFile(const class FString& LocalFilePath);
	bool SaveToAlbum(const class FString& LocalFilePath);
	void StartCapture(bool bInRecordAppAudio, bool bGeneratePreviewImage);
	void StopCapture(bool bIsCaptureInterrupted);
	void TakeScreenshot();
	void ToggleMicrophoneRecording(bool bEnableMicrophone);

	bool IsRecording() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ScreenCaptureContext">();
	}
	static class UScreenCaptureContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScreenCaptureContext>();
	}
};

}

